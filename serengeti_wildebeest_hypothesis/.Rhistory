shiny::runApp()
runApp()
runApp()
Serengeti <-read.csv("Full_Serengeti_Data.csv")
wetWilde <- filter(Serengeti,
(month(parse_date_time(Serengeti$Date,'mdy')) == 11
| month(parse_date_time(Serengeti$Date,'mdy') == 12))
& Species == "Wildebeest")
wetWilde <- filter(Serengeti,
month(parse_date_time(Serengeti$Date,'mdy')) == "11"
& Species == "Wildebeest")
wetWilde
View(wetWilde)
View(wetWilde)
View(wetWilde)
View(Serengeti)
View(Serengeti)
wetWilde <- filter(Serengeti,
(month..1.Jan.. == 11
& Species == "Wildebeest")
)
View(Serengeti)
wetWilde <- filter(Serengeti,
(Month..1.Jan.. == 11
& Species == "Wildebeest")
)
wetWilde <- filter(Serengeti,
(Month..1.Jan.. == 11
& Species == "wildebeest"))
wetWilde <- filter(Serengeti,
(Month..1.Jan.. == 11 | Month..1.Jan.. == 11 | Month..1.Jan.. == 1
& Species == "wildebeest"))
dryWilde <- filter(Serengeti,
(Month..1.Jan.. %in% c(6,7,8,9,10)
& Species == "wildebeest"))
Serengeti$Season <- "Inter"
Serengeti$Season[Month..1.Jan.. %in% c(6,7,8,9,10)]  <- "Dry"
Serengeti$Season[Month..1.Jan.. %in% c(11,12,1,2,3,4) ] <- "Wet"
Serengeti$Season[Serengeti$Month..1.Jan.. %in% c(6,7,8,9,10)]  <- "Dry"
Serengeti$Season[Serengeti$Month..1.Jan.. %in% c(11,12,1,2,3,4) ] <- "Wet"
ggplot(Serengeti,
(aes(x=Season, y = input$contVar)))
+ geom_violin()
#+ ylab("Time of Day of Observation (ignore date)")
+ ggtitle("Wildebeest Observations, Wet vs. Dry Season")
ggplot(Serengeti,
(aes(x=Season, y = input$contVar))
+ geom_violin()
#+ ylab("Time of Day of Observation (ignore date)")
+ ggtitle("Wildebeest Observations, Wet vs Dry Season"))
ggplot(Serengeti,
(aes(x=Season, y = input$contVar)))
ggplot(Serengeti,
(aes(x=Season, y = "input$contVar"Amount.of.Shade)))
ggplot(Serengeti,
(aes(x=Season, y = "Amount.of.Shade")))
geom_violin()
ggplot(Serengeti,
(aes(x=Season, y = "Amount.of.Shade"))) + geom_violin()
+ ggtitle("Title")
ggplot(Serengeti,
(aes(x=Season, y = "Distance.to.River..m."))) + geom_violin()
View(Serengeti)
View(Serengeti)
runApp()
Wilde <- filter(Serengeti,Species == "wildebeest")
Wilde<-droplevels(Wilde)
ggplot(Wilde,
+        (aes(x=Season, y = "Distance.to.River..m."))) + geom_violin()
ggplot(Wilde, (aes(x=Season, y = "Distance.to.River..m."))) + geom_violin()
ggplot(Wilde,(aes(x=Season, y = "Distance.to.River..m."))) + geom_boxplot(outlier.colour="black", outlier.shape=16,
outlier.size=2, notch=FALSE)
ggplot(Wilde,(aes(x=Season, y = Distance.to.River..m.))) + geom_boxplot(outlier.colour="black", outlier.shape=16,
outlier.size=2, notch=FALSE)
ggplot(Serengeti,
(aes(x=Season, y = Amount.of.Shade))) + geom_violin()
ggplot(Serengeti,
(aes(x=Season, y = Greeness..Wet.))) + geom_violin()
ggplot(Serengeti,
(aes(x=Season, y = Greeness..Wet.))) + geom_boxplot()
ggplot(Serengeti,
(aes(x=Season, y = Greeness..Dry.))) + geom_boxplot()
ggplot(Serengeti,
(aes(x=Season, y = Greeness..Dry.))) + geom_violin()
ggplot(Serengeti,
(aes(x=Season, y = Greeness..Dry.))) + geom_jitter(position=position_jitter(0.2))
ggplot(Serengeti,
(aes(x=Season, y = Greeness..Dry.))) + geom_jitter()
runApp()
Wilde <- filter(Serengeti, Species == "wildebeest" & Season != "Inter")
ggplot(Wilde,
(aes(x=Season, y = Greeness..Dry.))) + geom_violin()
runApp()
runApp()
View(Wilde)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
ggplot(Wilde,(aes(x=Season, y = "Distance.to.River..m."))) + geom_boxplot(outlier.colour="black", outlier.shape=16,
outlier.size=2, notch=FALSE)
temp = "Distance.to.River..m."
ggplot(Wilde,(aes(x=Season, y = temp))) + geom_boxplot(outlier.colour="black", outlier.shape=16,
outlier.size=2, notch=FALSE)
ggplot(Wilde,(aes(x=Season, y = paste('Wilde$',temp))) + geom_boxplot(outlier.colour="black", outlier.shape=16,
outlier.size=2, notch=FALSE)
)
ggplot(Wilde,(aes(x=Season, y = paste('Wilde$',temp))) + geom_boxplot(outlier.colour="black", outlier.shape=16,
outlier.size=2, notch=FALSE)
ggplot(Wilde,(aes(x=Season, y = paste('Wilde$',temp)))) + geom_boxplot(outlier.colour="black", outlier.shape=16,
outlier.size=2, notch=FALSE)
ggplot(Wilde,(aes(x=Season, y = paste('Wilde$',temp)))) + geom_boxplot(outlier.colour="black", outlier.shape=16, outlier.size=2, notch=FALSE)
ggplot(Wilde,(aes(x="Season", y = paste('Wilde$',temp)))) + geom_boxplot(outlier.colour="black", outlier.shape=16, outlier.size=2, notch=FALSE)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
contVarList = c("Amount.of.Shade", "Distance.to.River..m.",
"Distance.to.Confluence..m.","Distance.to.Kopje..m.",
"Tree.Density.Measure",
"Greeness..Dry." )
contVarNames = c("Shade (0-4 scale)","Distance to river (m)",
"Distance to confluence (m)", "Distance to kopje (m)",
"Ave. distance to trees (m)",
"Greenness, dry season")
contVarDict = Dictionary(uniqueKeysWithValues: zip(contVarList,contVarNames))
var contVarDict = [String: String]()
for i in 0..<min(linef.count, identic.count) {
var contVarDict = [String: String]()
for i in 0..<min(linef.count, identic.count) {Fullstack[contVarList[i]] = contVarNames[i]}
contVarDict = data.frame(contVarList,contVarNames)
contVarDict
runApp()
runApp()
runApp()
runApp()
runApp('~/Code/R/Snapshot2/Snapshot2.R')
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp('~/Code/R/Wildebeest2')
runApp('~/Code/R/Wildebeest2')
runApp('~/Code/R/Wildebeest1')
library(shiny); runApp('Wildebeest1.R')
runApp('Wildebeest1.R')
library(shiny); runApp('Wildebeest1.R')
