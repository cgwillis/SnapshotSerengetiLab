library(ggplot2)
library(ggridges)
library(tidyverse)
dat = read.csv('~/Documents/GitHub/SnapshotSerengetiLab/data/Full Serengeti Data.csv')
names(dat)
library(plyr)
x = count(dat, 'Babies')
x
?count
x = count(dat, c('Babies','Moving'))
x
x = count(dat, c('Babies','Species'))
x
ggplot(aes_string(x = x$Species, y = x$freq)) +
geom_boxplot(aes(color = Species))
ggplot(aes_string(x$Species,  x$freq)) +
geom_boxplot(aes(color = x$Species))
ggplot(aes_string(x,Species,freq)) +
geom_boxplot(aes(color = Species))
x
names(x)
ggplot(x,aes_string(Species,freq)) +
geom_boxplot(aes(color = Species))
ggplot(x,aes(Species,freq)) +
geom_boxplot(aes(color = Species))
x_sp = subset(x,Species==c('hare','cheetah'))
?subset
x_sp = subset(x,Species=c('hare','cheetah'))
x_sp
x_sp = subset(x,Species=='hare' & 'cheetah'))
x_sp = subset(x,Species=='hare' & 'cheetah')
x_sp = subset(x, Species == 'hare)
ggplot(aes(Species,freq)) +
geom_boxplot(aes(color = Species)) +
scale_color_manual(values = cbPalette) +
theme_minimal() +
scale_x_discrete(labels = label_wrap(10)) +
theme(axis.title = element_text(face = "bold", size = 24),
axis.title.y = element_text(margin = margin(t = 0, r = 20, b = 0, l = 0)),
axis.title.x = element_text(margin = margin(t = 10, r = 0, b = 0, l = 0)),
axis.text.x = element_text(size = 20),
axis.text.y = element_text(size = 20),
legend.text = element_text(size = 20),
legend.title = element_text(face = "bold", size = 24),
plot.margin = unit(c(1,1,1,1), "cm"))
ggplot(x,aes(Species,freq)) +
geom_boxplot(aes(color = Species))
x_sp = subset(x, Species == 'hare')
x_sp = subset(x, Species == 'hare')
x_sp
x_sp = subset(x, Species == 'hare' & 'cheetahs')
x_sp = subset(x, Species == 'hare' | 'cheetahs')
x_sp = subset(x, Species == 'hare', Species == 'cheetahs')
x_sp
x_sp = subset(x, Species == 'hare', Species == 'cheetah')
x_sp
x_sp = subset(x, Species == 'hare' | Species == 'cheetah')
x_sp
x_sp = subset(x, Species == 'eland' | Species == 'cheetah')
x_sp
ggplot(x,aes(Species,freq)) +
geom_boxplot(aes(color = Species))
ggplot(x_sp,aes(Species,freq)) +
geom_boxplot(aes(color = Species))
ggplot(x_sp,aes(Babies,freq)) +
geom_boxplot(aes(color = Species))
ggplot(x_sp,aes(Babies,freq)) +
geom_boxplot(aes(color = Species)) +
scale_color_manual(values = cbPalette) +
theme_minimal() +
scale_x_discrete(labels = label_wrap(10))
ggplot(x_sp,aes(Babies,freq)) +
geom_boxplot(aes(color = Species)) +
theme_minimal() +
scale_x_discrete(labels = label_wrap(10))
library(scales)
# A colorblind-friendly palette with grey:
cbPalette <- c("#E69F00", "#56B4E9", "#009E73", "#F0E442", "#0072B2", "#D55E00", "#CC79A7", "#999999")
ggplot(x_sp,aes(Babies,freq)) +
geom_boxplot(aes(color = Species)) +
theme_minimal() +
scale_x_discrete(labels = label_wrap(10))
ggplot(x_sp,aes(Babies,freq)) +
geom_boxplot(aes(color = Species)) +
scale_color_manual(values = cbPalette) +
theme_minimal() +
scale_x_discrete(labels = label_wrap(10))
x_sp
ggplot(x_sp,aes(Babies,freq,Species)) +
geom_boxplot(aes(color = Species)) +
scale_color_manual(values = cbPalette) +
theme_minimal() +
scale_x_discrete(labels = label_wrap(10))
ggplot(x_sp,aes(Babies,freq,Species)) +
scale_color_manual(values = cbPalette) +
theme_minimal() +
scale_x_discrete(labels = label_wrap(10))
ggplot(x_sp,aes(Babies,freq,Species)) +
geom_boxplot(aes(color = Babies)) +
scale_color_manual(values = cbPalette) +
theme_minimal() +
scale_x_discrete(labels = label_wrap(10))
ggplot(x_sp,aes(Babies,freq,Species)) +
geom_boxplot(aes(color = Species)) +
scale_color_manual(values = cbPalette) +
theme_minimal()
x_sp$Babies
x = count(dat, c('Babies','Species'))
x$Babies = as.factor(x$Babies)
x_sp = subset(x, Species == 'eland' | Species == 'cheetah')
ggplot(x_sp,aes(Babies,freq,Species)) +
geom_boxplot(aes(color = Species)) +
scale_color_manual(values = cbPalette) +
theme_minimal() +
scale_x_discrete(labels = label_wrap(10))
ggplot(x_sp,aes(Babies,freq,Species)) +
geom_bar(aes(color = Species)) +
scale_color_manual(values = cbPalette) +
theme_minimal() +
scale_x_discrete(labels = label_wrap(10))
ggplot(x_sp,aes(Babies,freq,Species)) +
geom_bar(aes(color = Species))
ggplot(x_sp,aes(Babies,freq,Species)) +
geom_bar() +
scale_color_manual(values = cbPalette) +
theme_minimal() +
scale_x_discrete(labels = label_wrap(10))
ggplot(x_sp,aes(Babies,freq,Species)) +
geom_bar()
ggplot(x_sp,aes(Species,freq,Babies)) +
geom_bar(aes(color = Species))
ggplot(x_sp,aes(Species,freq,Babies))
ggplot(x_sp,aes(Babies,freq,Species)) +
geom_bar()
ggplot(x_sp,aes(x=Babies,y=freq,fill=Species)) +
geom_bar(stat='identity')
ggplot(x_sp,aes(x=Babies,y=freq,fill=Species)) +
geom_bar(stat='identity', position = 'dodge') +
scale_color_manual(values = cbPalette)
ggplot(x_sp,aes(x=Babies,y=freq,fill=Species)) +
geom_bar(stat='identity', position = 'dodge') +
scale_color_manual(values = cbPalette) +
theme_minimal()
ggplot(x_sp,aes(x=Babies,y=freq,fill=Species)) +
geom_bar(stat='identity', position = 'dodge') +
scale_color_manual(values = cbPalette) +
theme_minimal() +
scale_x_discrete(labels = label_wrap(10))
ggplot(x_sp,aes(x=Babies,y=freq,fill=Species)) +
geom_bar(stat='identity', position = 'dodge',aes(Species)) +
scale_color_manual(values = cbPalette) +
theme_minimal() +
scale_x_discrete(labels = label_wrap(10))
ggplot(x_sp,aes(x=Babies,y=freq,fill=Species)) +
geom_bar(stat='identity', position = 'dodge',aes(Babies)) +
scale_color_manual(values = cbPalette) +
theme_minimal() +
scale_x_discrete(labels = label_wrap(10))
x_sp
install.packages("dplyr")              # Install and load dplyr
library("dplyr")
install.packages("dplyr")
install.packages("dplyr")
df$rel_freq <- round(ave(x_sp$freq, x_sp$Species, FUN=function(x)x/sum(x)),3)
df
round(ave(x_sp$freq, x_sp$Species, FUN=function(x)x/sum(x)),3)
x_sp$rel_freq <- round(ave(x_sp$freq, x_sp$Species, FUN=function(x)x/sum(x)),3)
ggplot(x_sp,aes(x=Babies,y=rel_freq,fill=Species)) +
geom_bar(stat='identity', position = 'dodge',aes(Babies)) +
ggtitle("Relative Frequency by Categorical Variable")
library(ggplot2)
library(ggridges)
library(tidyverse)
library(plyr)
library(scales)
# A colorblind-friendly palette with grey:
cbPalette <- c("#E69F00", "#56B4E9", "#009E73", "#F0E442", "#0072B2", "#D55E00", "#CC79A7", "#999999")
dat = read.csv('~/Documents/GitHub/SnapshotSerengetiLab/data/Full Serengeti Data.csv')
x = count(dat, c('Babies','Species'))
x$Babies = as.factor(x$Babies)
x_sp = subset(x, Species == 'eland' | Species == 'cheetah')
ggplot(x_sp,aes(x=Babies,y=freq,fill=Species)) +
geom_bar(stat='identity', position = 'dodge',aes(Babies)) +
ggtitle("Absolute Frequency by Categorical Variable")
x_sp$rel_freq <- round(ave(x_sp$freq, x_sp$Species, FUN=function(x)x/sum(x)),3)
ggplot(x_sp,aes(x=Babies,y=rel_freq,fill=Species)) +
geom_bar(stat='identity', position = 'dodge',aes(Babies)) +
ggtitle("Relative Frequency by Categorical Variable")
# subset data by Babies and two species for the sack of this example
df = count(dat, c('Babies','Species'))
df$Babies = as.factor(df$Babies)
df_sp = subset(df, Species == 'eland' | Species == 'cheetah')
ggplot(df_sp,aes(x=Babies,y=freq,fill=Species)) +
geom_bar(stat='identity', position = 'dodge',aes(Babies)) +
ggtitle("Absolute Frequency by Categorical Variable")
df_sp$rel_freq <- round(ave(df_sp$freq, df_sp$Species, FUN=function(x)x/sum(x)),3)
ggplot(df_sp,aes(x=Babies,y=rel_freq,fill=Species)) +
geom_bar(stat='identity', position = 'dodge',aes(Babies)) +
ggtitle("Relative Frequency by Categorical Variable")
names(dat)
ggplot(dat, aes(x=Distance.to.River..m.)) +
geom_histogram()
df2 = subset(dat, Species == 'eland' | Species == 'cheetah')
ggplot(df2, aes(x=Distance.to.River..m.)) +
geom_histogram()
ggplot(df2, aes(x=Distance.to.River..m., color=Species)) +
geom_histogram(fill="white", alpha=0.5, position="identity")
ggplot(df2, aes(x=Distance.to.River..m., color=Species)) +
geom_histogram(fill="white", alpha=0.5, position="identity") +
geom_vline(data=mu, aes(xintercept=grp.mean, color=Species),
linetype="dashed")
mu <- ddply(df2, "Species", summarise, grp.mean=mean(weight))
head(mu)
mu <- ddply(df2, "Species", summarise, grp.mean=mean(weight))
mu <- ddply(df2, "Species", summarise, grp.mean=mean(Distance.to.River..m.))
head(mu)
ggplot(df2, aes(x=Distance.to.River..m., color=Species)) +
geom_histogram(fill="white", alpha=0.5, position="identity") +
geom_vline(data=mu, aes(xintercept=grp.mean, color=Species),
linetype="dashed")
ggplot(df2, aes(x=Distance.to.River..m., color=Species)) +
geom_histogram(fill="white", alpha=1, position="identity") +
geom_vline(data=mu, aes(xintercept=grp.mean, color=Species),
linetype="dashed")
ggplot(df2, aes(x=Distance.to.River..m., color=Species)) +
geom_histogram(alpha=1, position="identity") +
geom_vline(data=mu, aes(xintercept=grp.mean, color=Species),
linetype="dashed")
ggplot(df2, aes(x=Distance.to.River..m., color=Species)) +
geom_histogram(alpha=1, position="identity") +
scale_color_manual(cbPalette) +
geom_vline(data=mu, aes(xintercept=grp.mean, color=Species),
linetype="dashed")
ggplot(df2, aes(x=Distance.to.River..m., color=Species)) +
geom_histogram(alpha=1, position="identity") +
scale_color_manual(values=cbPalette) +
geom_vline(data=mu, aes(xintercept=grp.mean, color=Species),
linetype="dashed")
ggplot(df2, aes(x=Distance.to.River..m., color=Species)) +
geom_histogram(fill=Species, alpha=1, position="identity") +
scale_color_manual(values=cbPalette) +
geom_vline(data=mu, aes(xintercept=grp.mean, color=Species),
linetype="dashed")
ggplot(df2, aes(x=Distance.to.River..m., color=Species)) +
geom_histogram(aes(Species), alpha=1, position="identity") +
scale_color_manual(values=cbPalette) +
geom_vline(data=mu, aes(xintercept=grp.mean, color=Species),
linetype="dashed")
ggplot(df2, aes(x=Distance.to.River..m., color=Species)) +
geom_histogram(fill='white', alpha=.5, position="identity") +
scale_color_manual(values=cbPalette) +
geom_vline(data=mu, aes(xintercept=grp.mean, color=Species),
linetype="dashed")
ggplot(df2, aes(x=Distance.to.River..m., color=Species)) +
geom_histogram(fill='white', alpha=.5, position="identity") +
scale_color_manual(values=cbPalette) +
scale_fill_manual(values=cbPalette) +
geom_vline(data=mu, aes(xintercept=grp.mean, color=Species),
linetype="dashed")
ggplot(df2, aes(x=Distance.to.River..m., color=Species)) +
geom_histogram(alpha=.5, position="identity") +
scale_color_manual(values=cbPalette) +
scale_fill_manual(values=cbPalette) +
geom_vline(data=mu, aes(xintercept=grp.mean, color=Species),
linetype="dashed")
ggplot(df2, aes(x=Distance.to.River..m., color=Species)) +
geom_histogram(fill='white', alpha=.5, position="identity") +
scale_color_manual(values=cbPalette) +
scale_fill_manual(values=cbPalette) +
geom_vline(data=mu, aes(xintercept=grp.mean, color=Species),
linetype="dashed")
ggplot(df2, aes(x=Distance.to.River..m., color=Species)) +
geom_histogram(fill='white', alpha=.5, position="identity") +
scale_fill_manual(values=cbPalette) +
geom_vline(data=mu, aes(xintercept=grp.mean, color=Species),
linetype="dashed")
ggplot(df2, aes(x=Distance.to.River..m., color=Species)) +
geom_histogram(alpha=.5, position="identity") +
scale_fill_manual(values=cbPalette) +
geom_vline(data=mu, aes(xintercept=grp.mean, color=Species),
linetype="dashed")
ggplot(df2, aes(x=Distance.to.River..m., color=Species)) +
geom_histogram(fill='white', alpha=.5, position="identity") +
scale_color_manual(values=cbPalette) +
geom_vline(data=mu, aes(xintercept=grp.mean, color=Species),
linetype="dashed")
df2
df3 = subset(dat, Species == 'eland')
mu <- ddply(df3, "Babies", summarise, grp.mean=mean(Distance.to.River..m.))
head(mu)
ggplot(df3, aes(x=Distance.to.River..m., color=Babies)) +
geom_histogram(fill='white', alpha=.5, position="identity") +
scale_color_manual(values=cbPalette) +
geom_vline(data=mu, aes(xintercept=grp.mean, color=Babies),
linetype="dashed")
ggplot(df3, aes(x=Distance.to.River..m., color=Babies)) +
geom_histogram(fill='white', alpha=.5, position="identity")
names(df3)
ggplot(df3, aes(x=Distance.to.River..m., color=Babies)) +
geom_histogram()
dim(df3)
summary(df3)
dat$Babies = as.factor(dat$Babies)
# comparing one species within a category
df3 = subset(dat, Species == 'eland')
mu <- ddply(df3, "Babies", summarise, grp.mean=mean(Distance.to.River..m.))
head(mu)
ggplot(df3, aes(x=Distance.to.River..m., color=Babies)) +
geom_histogram(fill='white', alpha=.5, position="identity") +
scale_color_manual(values=cbPalette) +
geom_vline(data=mu, aes(xintercept=grp.mean, color=Babies),
linetype="dashed")
dat$Babies = as.factor(dat$Babies)
##### Generate Frequency Plots by Categorical Variables ####
# subset data by Babies and two species for the sack of this example
df = count(dat, c('Babies','Species'))
df_sp = subset(df, Species == 'eland' | Species == 'cheetah')
# Plot the absolute frequency of each animal by the categorical variable
ggplot(df_sp,aes(x=Babies,y=freq,fill=Species)) +
geom_bar(stat='identity', position = 'dodge',aes(Babies)) +
ggtitle("Absolute Frequency by Categorical Variable")
# Plot the absolute frequency of each animal by the categorical variable
# caculate the relative requency by animal in each category
df_sp$rel_freq <- round(ave(df_sp$freq, df_sp$Species, FUN=function(x)x/sum(x)),3)
ggplot(df_sp,aes(x=Babies,y=rel_freq,fill=Species)) +
geom_bar(stat='identity', position = 'dodge',aes(Babies)) +
ggtitle("Relative Frequency by Categorical Variable")
##### Generate Histogram Plots by Continuous Variables ####
# examples uses Distance.to.River..m.
# comparing two species
df2 = subset(dat, Species == 'eland' | Species == 'cheetah')
mu <- ddply(df2, "Species", summarise, grp.mean=mean(Distance.to.River..m.))
head(mu)
ggplot(df2, aes(x=Distance.to.River..m., color=Species)) +
geom_histogram(fill='white', alpha=.5, position="identity") +
scale_color_manual(values=cbPalette) +
geom_vline(data=mu, aes(xintercept=grp.mean, color=Species),
linetype="dashed")
# comparing one species within a category
df3 = subset(dat, Species == 'eland')
mu <- ddply(df3, "Babies", summarise, grp.mean=mean(Distance.to.River..m.))
head(mu)
ggplot(df3, aes(x=Distance.to.River..m., color=Babies)) +
geom_histogram(fill='white', alpha=.5, position="identity") +
scale_color_manual(values=cbPalette) +
geom_vline(data=mu, aes(xintercept=grp.mean, color=Babies),
linetype="dashed")
View(df3)
library(sf)
library(raster)
library(dplyr)
library(spData)
library(spDataLarge)
install.packages("spDataLarge")
library(sf)
library(raster)
library(dplyr)
library(spData)
library(spDataLarge)
library(tmap)    # for static and interactive maps
library(leaflet) # for interactive maps
library(mapview) # for interactive maps
library(ggplot2) # tidyverse vis package
library(shiny)   # for web applications
install.packages("spDataLarge", repos = "https://nowosad.github.io/drat/", type = "source")
library(sf)
library(raster)
library(dplyr)
library(spData)
library(spDataLarge)
library(tmap)    # for static and interactive maps
library(leaflet) # for interactive maps
library(mapview) # for interactive maps
library(ggplot2) # tidyverse vis package
library(shiny)   # for web applications
setwd("~/Documents/GitHub/SnapshotSerengetiLab/serengeti_dashboard")
ls()
install.packages(‘remotes’)
library(remotes)
remotes::install_github("r-spatial/mapview”)
deployApp()
ls()d
0
library(ggplot2)
)
)))))
((()))
''
'
library(ggridges)
dffdasfafd fad dafdafd
af
library(tidyverse)
library(plyr)
